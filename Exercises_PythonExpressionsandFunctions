"""
Exercises: Python Expressions and Functions
------------------------------------------
This file contains functions to:
1. Calculate simple interest
2. Calculate the hypotenuse of a right triangle
3. Find the distance between two points in 2D space
"""

import math

def calculate_interest(principal: float, rate: float, time: float) -> float:
    """
    Calculate simple interest.

    Args:
        principal: Principal amount (must be non-negative)
        rate: Interest rate as a percentage (must be non-negative)
        time: Time period (must be non-negative)

    Returns:
        Simple interest as a float.
    """
    if principal < 0 or rate < 0 or time < 0:
        raise ValueError("Principal, rate, and time must be non-negative.")
    return (principal * rate * time) / 100

def calculate_hypotenuse(base: float, height: float) -> float:
    """
    Calculate the hypotenuse of a right-angled triangle.

    Args:
        base: Length of the base side (must be non-negative)
        height: Length of the height side (must be non-negative)

    Returns:
        Hypotenuse as a float.
    """
    if base < 0 or height < 0:
        raise ValueError("Base and height must be non-negative.")
    return math.hypot(base, height)

def find_distance_2d(x1: float, y1: float, x2: float, y2: float) -> float:
    """
    Calculate the distance between two points in 2D space.

    Args:
        x1, y1: Coordinates of the first point
        x2, y2: Coordinates of the second point

    Returns:
        Distance between the two points as a float.
    """
    return math.hypot(x2 - x1, y2 - y1)

if __name__ == "__main__":
    # Interest examples
    print("Interest:", calculate_interest(1000, 5, 2))   # Output: 100.0
    print("Interest:", calculate_interest(1500, 4.3, 3)) # Output: 193.5
    print("Interest:", calculate_interest(500, 10, 0))   # Output: 0.0

    # Hypotenuse examples
    print("Hypotenuse:", calculate_hypotenuse(3, 4))     # Output: 5.0
    print("Hypotenuse:", calculate_hypotenuse(5, 12))    # Output: 13.0
    print("Hypotenuse:", calculate_hypotenuse(0, 0))     # Output: 0.0

    # Distance examples
    print("Distance:", find_distance_2d(0, 0, 3, 4))     # Output: 5.0
    print("Distance:", find_distance_2d(1, 2, 4, 6))     # Output: 5.0
